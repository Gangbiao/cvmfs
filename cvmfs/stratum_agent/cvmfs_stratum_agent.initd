#!/bin/sh

# Part of the CernVM File System
# See: http://cernvm.cern.ch

### BEGIN INIT INFO
# Provides:           cvmfs_stratum_agent
# Required-Start:     $local_fs $network $named
# Should-Start:       $time
# Required-Stop:
# Should-Stop:
# Default-Start:      3 4 5
# Default-Stop:       0 1 2 6
# Short-Description:  Starts the cvmfs stratum 1 agent
# Description:        The cvmfs stratum 1 agent listens for replication requests
### END INIT INFO

. /etc/init.d/functions

# Return values acc. to LSB for all commands but status:
# 0	  - success
# 1       - generic or unspecified error
# 2       - invalid or excess argument(s)
# 3       - unimplemented feature (e.g. "reload")
# 4       - user had insufficient privileges
# 5       - program is not installed
# 6       - program is not configured
# 7       - program is not running
# 8--199  - reserved (8--99 LSB, 100--149 distrib, 150--199 appl)

RETVAL=0
LOCKFILE=/var/lock/subsys/cvmfs_stratum_agent
PIDFILE=/var/run/cvmfs_stratum_agent.pid

[ -f /etc/sysconfig/cvmfs_stratum_agent ] && . /etc/sysconfig/cvmfs_stratum_agent

prog_agent="/usr/bin/cvmfs_stratum_agent"


is_root() {
  [ $(id -u) -eq 0 ] && return 0
  return 1
}


start() {
  ! is_root && return 4

  if [ ! -f $PIDFILE ]; then
    [ -x $prog_agent ] || return 5
    echo -n $"Starting CernVM-FS stratum 1 agent: "
    $prog_agent $OPTIONS
    RETVAL=$?
    if [ $RETVAL -eq 0 ]; then
      echo_success
      echo
      touch ${LOCKFILE}
    else
      echo_failure
      echo
    fi
  fi

  return $RETVAL
}


stop() {
  [ ! is_root ] && return 4

  if [ -f $PIDFILE ]; then
    echo -n $"Shutting down CernVM-FS stratum 1 agent: "
    /bin/kill $(cat $PIDFILE)
    rm -f $PIFDILE
    echo_success
    echo
  fi

  [ $RETVAL -eq 0 ] && rm -f ${LOCKFILE}

  return $RETVAL
}


reload() {
  [ ! is_root ] && return 4

  if [ -f $PIDFILE ]; then
    echo -n $"Reloading CernVM-FS stratum 1 agent: "
    /bin/kill -HUP $(cat $PIDFILE)
    rm -f $PIFDILE
    echo_success
    echo
  else
    RETVAL=7
  fi

  return $RETVAL
}


status() {
  if [ -f $PIDFILE ]; then
    if /bin/kill -0 $(cat $PIDFILE) >/dev/null 2>&1; then
      echo "CernVM-FS stratum 1 agent running as pid $(cat $PIDFILE)"
      RETVAL=0
    else
      echo "CernVM-FS stratum 1 agent dead, but $PIDFILE file exists"
      RETVAL=1
    fi
  else
    if [ -f $LOCKFILE ]; then
      echo "CernVM-FS stratum 1 agent dead, but $LOCKFILE file exists"
      RETVAL=2
    else
      echo "CernVM-FS stratum 1 agent not running"
      RETVAL=3
    fi
  fi
}


case "$1" in
  start)
    start
    RETVAL=$?
  ;;
  stop)
    stop
    RETVAL=$?
  ;;
  restart|try-restart|condrestart)
    ## Stop the service and regardless of whether it was
    ## running or not, start it again.
    #
    ## Note: try-restart is now part of LSB (as of 1.9).
    ## RH has a similar command named condrestart.
    stop
    start
    RETVAL=$?
  ;;
    reload|force-reload)
    reload
    RETVAL=$?
  ;;
  status)
    # Return value is slightly different for the status command:
    # 0 - service up and running
    # 1 - service dead, but /var/run/  pid  file exists
    # 2 - service dead, but /var/lock/ lock file exists
    # 3 - service not running (unused)
    # 4 - service status unknown :-(
    # 5--199 reserved (5--99 LSB, 100--149 distro, 150--199 appl.)
    status
    RETVAL=$?
  ;;
  *)
    echo "Usage: $0 {start|stop|status|try-restart|condrestart|restart|force-reload|reload}"
    RETVAL=3
  ;;
esac

exit $RETVAL
